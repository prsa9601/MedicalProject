@page
@model MedicalProject.Pages.Auth.VerificationPhoneNumberModel
@{
    ViewData["Title"] = "تأیید شماره تلفن";
}

<div class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">
    <div class="sm:mx-auto sm:w-full sm:max-w-md">
        <div class="flex justify-center">
            <div class="w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center">
                <svg class="h-8 w-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                </svg>
            </div>
        </div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
            تأیید شماره تلفن
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
            کد تأیید ۶ رقمی ارسال شده به شماره تلفن خود را وارد کنید
        </p>
    </div>

    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
        <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
            <form method="post" class="space-y-6">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-3">
                        کد تأیید
                    </label>
                    <div class="flex justify-center gap-2" dir="ltr">
                        <input type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" class="code-input" data-index="0" required />
                        <input type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" class="code-input" data-index="1" disabled />
                        <input type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" class="code-input" data-index="2" disabled />
                        <input type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" class="code-input" data-index="3" disabled />
                        <input type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" class="code-input" data-index="4" disabled />
                        <input type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" class="code-input" data-index="5" disabled />
                    </div>
                </div>

                <div class="flex items-center justify-between">
                    <div class="text-sm">
                        <a href="#" class="font-medium text-blue-600 hover:text-blue-500" id="resendLink">
                            ارسال مجدد کد
                        </a>
                    </div>
                    <div class="text-sm">
                        <span id="countdown" class="font-medium text-gray-500">03:00</span>
                    </div>
                </div>

                <div>
                    <button type="submit" id="verifyButton" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors" disabled>
                        تأیید کد
                    </button>
                </div>
            </form>

            <div class="mt-6">
                <div class="relative">
                    <div class="absolute inset-0 flex items-center">
                        <div class="w-full border-t border-gray-300"></div>
                    </div>
                    <div class="relative flex justify-center text-sm">
                        <span class="px-2 bg-white text-gray-500">
                            مشکل در دریافت کد؟
                        </span>
                    </div>
                </div>

                <div class="mt-6 text-center">
                    <a asp-page="VerificationPhoneNumber" class="font-medium text-blue-600 hover:text-blue-500">
                        تغییر شماره تلفن
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .code-input {
        width: 50px;
        height: 50px;
        text-align: center;
        font-size: 18px;
        font-weight: 600;
        border: 2px solid #e5e7eb;
        border-radius: 8px;
        background-color: white;
        transition: all 0.2s;
        direction: ltr;
    }

        .code-input:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
            transform: scale(1.05);
        }

        .code-input:disabled {
            background-color: #f9fafb;
            border-color: #d1d5db;
            color: #9ca3af;
            cursor: not-allowed;
        }

        .code-input.filled {
            border-color: #10b981;
            background-color: #f0fdf4;
        }

        /* حذف فلش‌های بالا و پایین در input number */
        .code-input::-webkit-outer-spin-button,
        .code-input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        .code-input[type="number"] {
            -moz-appearance: textfield;
        }
</style>

@section Scripts {
    <script>
        const inputs = document.querySelectorAll(".code-input");
        const verifyButton = document.getElementById("verifyButton");
        const resendLink = document.getElementById("resendLink");

        // تایمر شمارش معکوس - 3 دقیقه
        let timeLeft = 180; // 3 دقیقه
        let countdownInterval;
        const countdownElement = document.getElementById("countdown");

        function startCountdown() {
            clearInterval(countdownInterval);
            timeLeft = 180;
            countdownElement.textContent = "03:00";
            resendLink.classList.add('text-gray-400', 'cursor-not-allowed');
            resendLink.classList.remove('text-blue-600', 'hover:text-blue-500');

            countdownInterval = setInterval(() => {
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                countdownElement.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

                if (timeLeft <= 0) {
                    clearInterval(countdownInterval);
                    countdownElement.textContent = "00:00";
                    resendLink.classList.remove('text-gray-400', 'cursor-not-allowed');
                    resendLink.classList.add('text-blue-600', 'hover:text-blue-500');
                } else {
                    timeLeft--;
                }
            }, 1000);
        }

        // منطق ورودی کد تأیید
        inputs.forEach((input, index) => {
            input.addEventListener('input', (e) => {
                const value = e.target.value;

                // فقط اعداد مجاز هستند
                if (!/^\d*$/.test(value)) {
                    e.target.value = value.replace(/\D/g, '');
                    return;
                }

                // محدود کردن به یک رقم
                if (value.length > 1) {
                    e.target.value = value.charAt(0);
                }

                // اضافه کردن کلاس filled برای فیلدهای پر شده
                if (value.length === 1) {
                    e.target.classList.add('filled');
                } else {
                    e.target.classList.remove('filled');
                }

                // رفتن به فیلد بعدی اگر رقم وارد شده
                if (value.length === 1 && index < inputs.length - 1) {
                    const nextInput = inputs[index + 1];
                    nextInput.removeAttribute('disabled');
                    nextInput.focus();
                }

                // بررسی وضعیت دکمه تأیید
                checkAllInputsFilled();
            });

            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace') {
                    e.preventDefault();

                    // اگر فیلد خالی است و Backspace زده شد، به فیلد قبلی برو
                    if (e.target.value === '' && index > 0) {
                        const prevInput = inputs[index - 1];
                        e.target.setAttribute('disabled', 'true');
                        e.target.classList.remove('filled');
                        prevInput.focus();
                        prevInput.select();
                    } else {
                        // اگر فیلد پر است، آن را خالی کن
                        e.target.value = '';
                        e.target.classList.remove('filled');
                    }
                    checkAllInputsFilled();
                }

                // پشتیبانی از کلیدهای جهت‌دار
                if (e.key === 'ArrowLeft' && index > 0) {
                    e.preventDefault();
                    inputs[index - 1].focus();
                } else if (e.key === 'ArrowRight' && index < inputs.length - 1) {
                    e.preventDefault();
                    if (!inputs[index + 1].disabled) {
                        inputs[index + 1].focus();
                    }
                }

                // جلوگیری از ورود کاراکترهای غیر عددی
                if (e.key.length === 1 && !/\d/.test(e.key)) {
                    e.preventDefault();
                }
            });

            input.addEventListener('focus', (e) => {
                e.target.select();
            });

            input.addEventListener('click', (e) => {
                e.target.select();
            });

            input.addEventListener('paste', (e) => {
                e.preventDefault();
                const pasteData = e.clipboardData.getData('text').replace(/\D/g, '');
                if (pasteData.length === 6) {
                    for (let i = 0; i < 6; i++) {
                        if (i < inputs.length) {
                            inputs[i].value = pasteData.charAt(i);
                            inputs[i].classList.add('filled');
                            if (i < inputs.length - 1) {
                                inputs[i + 1].removeAttribute('disabled');
                            }
                        }
                    }
                    checkAllInputsFilled();
                    inputs[5].focus();
                }
            });
        });

        function checkAllInputsFilled() {
            const allFilled = Array.from(inputs).every(input => input.value.length === 1);
            if (allFilled) {
                verifyButton.removeAttribute("disabled");
            } else {
                verifyButton.setAttribute("disabled", "true");
            }
        }

        // رویداد کلیک برای ارسال مجدد
        resendLink.addEventListener('click', (e) => {
            if (!resendLink.classList.contains('text-gray-400')) {
                e.preventDefault();
                // ریست کردن تمام فیلدها
                inputs.forEach((input, index) => {
                    input.value = '';
                    input.classList.remove('filled');
                    if (index > 0) {
                        input.setAttribute('disabled', 'true');
                    }
                });
                inputs[0].focus();
                verifyButton.setAttribute('disabled', 'true');
                startCountdown();

                // در اینجا می‌توانید درخواست ارسال مجدد کد به سرور را اضافه کنید
                console.log('درخواست ارسال مجدد کد');
            }
        });

        // شروع تایمر هنگام لود صفحه
        startCountdown();

        // فوکوس روی اولین فیلد هنگام لود صفحه
        window.addEventListener("load", () => {
            inputs[0].focus();
        });

        // جلوگیری از submit فرم با کلید Enter
        document.querySelector('form').addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                e.preventDefault();
            }
        });
    </script>
}