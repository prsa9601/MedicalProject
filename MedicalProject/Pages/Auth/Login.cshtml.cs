using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using System.ComponentModel.DataAnnotations;

namespace MedicalProject.Pages.Auth
{
    public class LoginModel : PageModel
    {
        [BindProperty]
        [Display(Name = "??? ?????? ?? ?????")]
        public string Username { get; set; } = string.Empty;

        [BindProperty]
        [Display(Name = "??? ????")]
        public string Password { get; set; } = string.Empty;

        [BindProperty]
        [Display(Name = "??? ?? ???? ?????")]
        public bool RememberMe { get; set; }

        public string? UsernameError { get; set; }
        public string? PasswordError { get; set; }
        public string? ErrorMessage { get; set; }

        public void OnGet()
        {
        }

        public async Task<IActionResult> OnPostAsync()
        {
            // ?????????? ?????
            if (string.IsNullOrEmpty(Username))
            {
                UsernameError = "??? ?????? ?????? ???";
            }

            if (string.IsNullOrEmpty(Password))
            {
                PasswordError = "??? ???? ?????? ???";
            }

            if (!string.IsNullOrEmpty(UsernameError) || !string.IsNullOrEmpty(PasswordError))
            {
                return Page();
            }

            try
            {
                // ????? ???? ????? ???? ????? ?????????? ??????
                // ???? ?????? ?? ????? ???? ????
                if (await AuthenticateUser(Username, Password))
                {
                    // ????? ??????? ? ???????? ?? ???????
                    Response.Cookies.Append("user_auth", "authenticated", new CookieOptions
                    {
                        Expires = RememberMe ? DateTimeOffset.Now.AddDays(30) : DateTimeOffset.Now.AddHours(24),
                        HttpOnly = true,
                        IsEssential = true
                    });

                    return RedirectToPage("/Dashboard");
                }
                else
                {
                    ErrorMessage = "??? ?????? ?? ??? ???? ?????? ???";
                    return Page();
                }
            }
            catch (Exception ex)
            {
                ErrorMessage = "??? ?? ???? ?? ?????. ????? ?????? ???? ????.";
                // ??? ???? ???
                // _logger.LogError(ex, "Error during login for user {Username}", Username);
                return Page();
            }
        }

        private async Task<bool> AuthenticateUser(string username, string password)
        {
            // ????? ???? ???? ????? ????? ???? ?????????? ???
            // ???? ?????? ????? ?? ???????
            await Task.Delay(100); // ????????? ????? ????

            // ????? ???? - ?? ???? ????? ???? ?? ??????? ?? ???
            var validUsers = new Dictionary<string, string>
            {
                { "admin", "admin123" },
                { "user", "user123" }
            };

            return validUsers.Any(u => u.Key == username && u.Value == password);
        }
    }
}
